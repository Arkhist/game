#cache:
#  paths:
#    - target/

stages:
  - build
  - test
  - deploy
  - post-run

# our own git fetch command like https://gitlab.com/gitlab-org/gitlab-runner/blob/master/shells/abstract.go
# speeds up building because we skip the git clean and dont need any gitlab caches
variables:
  GIT_STRATEGY: none
before_script:
  - rm -f .git/index.lock
  - rm -f .git/shallow.lock
  - rm -f .git/HEAD.lock
  - rm -f .git/hocks/post-checkout
  - git remote set-url origin $CI_REPOSITORY_URL
  - git fetch origin --prune +refs/heads/*:refs/remotes/origin/* +refs/tags/*:refs/tags/*
  - git checkout -f -q $CI_COMMIT_SHA
  - git status
  - ls -la target
#  - git submodule update --init --recursive

build-voxygen:
  stage: build
  script:
    - (cd voxygen && cargo build)

build-voxygen:
  stage: build
  script:
    - (cd headless && cargo build)

build-server-cli:
  stage: build
  script:
    - (cd server-cli && cargo build)

unittests:
  stage: test
  script:
    - cargo test

#benchmarktests:
#  stage: test
#  script:
#    - cargo bench

package-debug:
  stage: deploy
  script:
    - (cd voxygen && cargo build)
    - (cd server-cli && cargo build)
    - (cd headless && cargo build)
    - rm -r -f package
    - mkdir package
    - cp target/debug/server-cli package
    - cp target/debug/voxygen package
    - cp target/debug/headless package
    - cp -r voxygen/vox package/vox
    - rm -f package-debug.tar.bz2
    - tar -cvjSf package-debug.tar.bz2 package
  when: always
  artifacts:
    paths:
      - package-debug.tar.bz2
    expire_in: 1 week

package-release:
  stage: deploy
  script:
    - (cd voxygen && cargo build --release)
    - (cd server-cli && cargo build --release)
    - (cd headless && cargo build --release)
    - rm -r -f package
    - mkdir package
    - cp target/release/server-cli package
    - cp target/release/voxygen package
    - cp target/release/headless package
    - cp -r voxygen/vox package/vox
    - rm -f package-release.tar.gz
    - tar -zcvf package-release.tar.gz package
  artifacts:
    paths:
      - package-release.tar.gz
    expire_in: 1 week

package-windows-debug:
  stage: deploy
  script:
    - (cd voxygen && cargo build --target=x86_64-pc-windows-gnu)
    - (cd server-cli && cargo build --target=x86_64-pc-windows-gnu)
    - (cd headless && cargo build --target=x86_64-pc-windows-gnu)
    - rm -r -f package
    - mkdir package
    - cp target/x86_64-pc-windows-gnu/debug/server-cli.exe package
    - cp target/x86_64-pc-windows-gnu/debug/voxygen.exe package
    - cp target/x86_64-pc-windows-gnu/debug/headless.exe package
    - cp -r voxygen/vox package/vox
    - rm -f package-windows-debug.zip
    - zip -r package-windows-debug.zip package
  artifacts:
    paths:
      - package-windows-debug.zip
    expire_in: 1 week

coverage:
  stage: post-run
  script:
    - if cargo install --list | grep -q "cargo-tarpaulin"; then
        echo "tarpaulin already installed";
      else
        RUSTFLAGS="--cfg procmacro2_semver_exempt" cargo install cargo-tarpaulin;
      fi
    - (cd common && cargo tarpaulin)
